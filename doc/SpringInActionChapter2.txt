2장 빈 와이어링 (Bean Wiring) 

와이어링 - 객체간의 결합이 생길 때 직접 생성이 아닌 필요한 객체에 주입하는(DI) 행위를 와이어링 이라 한다. 
결국 빈 와이어링이란, 스프링 컨테이너가 관리하는 빈(Bean)을 필요한 Bean에 래퍼런스를 주입하는것을 말한다. 

1. 빈 선언
	- 스프링 컨테이너에 의해서 빈의 생명주기가 관리되는데 설정방법 에는 두가지가 있다. 
	
	1) XML파일에 설정
	  - 스프링 설정 파일의 루트 엘리먼트는 beans 스키마에서 <beans></beans> 엘리먼트 이다. 
 	  - <beans /> 안에 <bean> 엘리먼트로 빈을 선언할 수 있다. 
	2) 어노테이션 설정

2. 간단한 빈 선언 


-------------------------------------------------------------------------------------------------------------
	선언 방법 >>
		<bean id="빈이름" class="빈의 타입" scope="" init-method="" destroy-method="">
			<constructor-arg value="값" />
			<constructor-arg ref="참조 래퍼런스" />
			<property value="" />
			<property ref="" />
			<factory-method="함수명" />
			<init-method />
			<destroy-method />
			<scope 
		</bean>
-------------------------------------------------------------------------------------------------------------
	- id 는 스프링 컨테이너에서 참조할 때 사용하는 이름을 나타냄
	- class 는 스프링에게 빈의 타입을 말해 준다. 
	- <contructor-arg />는 bean객체안의 생성자를 나타내며 속성으로 value(값) , ref(래퍼런스) 를 사용할 수 있다. 
	- <factory-method />는 정적 팩토리 메소드를 지원한다. (기본생성자 대신 인스턴스생성에 사용하는 정적메소드, 예로 싱글톤의 getInstance())	
	- <bean scope="" /> scope속성은 유효범위를 설정한다. 컨테이너는 빈을 내줄 때 싱글톤(객체당 하나의 주소)지만 
	객체가 생성될 때마다 주소를 달리해주는 객체에 대한 유효범위를 지정해줄 수 있다. 
	Scope 값의 종류:"prototype" , "singleton" , "request" , "session" , "global-session"

	자바에서는 클래스로더(classloader)당 하나의 인스턴스를 보장하지만 스프링은 애플리케이션 컨텍스트의 빈 정의 항목마다 하나의 빈 인스턴스를 보장한다. 
	- init-method 속성은 빈 객체가 생성된 후 바로 호출된다. 
	- destroy-method 속성은 빈 객체가 컨테이너에서 소멸된 직후에 호출된다. 
		모든 bean에 init-method , destroy-method 적용하기
			- <beans 
			     default-init-method="",
			     destroy-method="" /> 
	사용 방법 : ApplicationContext ctx = new ClassPathApplicationContext("경로");
		    ctx.getBean("빈 이름"); 
